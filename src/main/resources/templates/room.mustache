{{>layouts/header}}
{{#dto}}
<div class="card-container">
    <div id = "show"></div>
    <div id = "code" style="cursor: pointer">초대 코드 : {{code}}</div>
    <div class="card card-title">
        {{title}}
    </div>
    <div class="card card-content card-content-info">
        {{info}}
    </div>
    <button type="button" id="join-button">파티 참여하기</button>
    <button type="button" id="bye-button">파티 탈퇴하기</button>
    <button type="button" id="edit-button"
            data-bs-toggle="modal"
            data-bs-target="#edit-modal">파티 수정하기</button>
    <input type="hidden" id="userId" value="{{userId}}">
    <input type="hidden" id="leaderId" value="{{leader}}">
    <div style="text-align: center">참여 인원</div>
    {{#userDtos}}
    <div class="card mb-3">
        <div class="card-content">
            {{nickname}}
        </div>
    </div>
    {{/userDtos}}
    <div style="text-align: center">N빵 목록</div>
    <button type="button" id="join-button"
            data-bs-toggle="modal"
            data-bs-target="#schedule-modal">N빵 만들기</button>
    {{#scheduleDtos}}
        <div class="card mb-3">
            <div class="card-content-article" style="text-align: center; font-size: 1.0em">
                {{date}} {{money}}원
                <input type="hidden" id="show-info-{{id}}" value="{{info}}">
                <button type="button" id="manage-schedule-button" onclick="goToSchedule({{id}})">관리</button>
                <button type="button" id="show-info-button" onclick="showInfo({{id}})" style="margin-right: 10px">정보</button>
            </div>
        </div>
    {{/scheduleDtos}}
    <div style="text-align: center">한 마디 게시판</div>
    <textarea class="form-control form-control-sm" rows="1" id="article-text" style="margin-bottom: 10px"></textarea>
    <button type="button" id="add-article-button">게시글 작성하기</button>
    {{#articleDtos}}
        <div class="card mb-3">
            <div class="card-content-article" style="font-size: 1.0em">{{nickname}}</div>
            <div class="card-content-article">
                {{content}}
                <button type="button" id="delete-article-button" onclick="deleteArticle({{id}}, {{userId}})">삭제</button>
            </div>
        </div>
    {{/articleDtos}}
</div>
<script>
    function checkShow(show){
        const showDiv = document.getElementById("show");
        if(show){
            showDiv.innerHTML = "이 방은 공개 방입니다";
            showDiv.style.color = "#4286f5";
        }
        else{
            showDiv.innerHTML = "이 방은 비공개 방입니다";
            showDiv.style.color = "#FF6666";
        }
    }
    window.onload = checkShow({{show}});
</script>
<script>
    function copyCode() {
        const textarea = document.createElement("textarea");
        const codeValue = "{{code}}";
        textarea.value = String(codeValue);
        document.body.appendChild(textarea);
        textarea.select();
        document.execCommand("copy");
        document.body.removeChild(textarea);
        alert("초대 코드가 클립보드에 복사되었습니다!");
    }

    document.getElementById("code").addEventListener("click", function() {
        copyCode();
    });
</script>
<script>
    {
        const relationCheckBtn = document.querySelector("#join-button")
        relationCheckBtn.addEventListener("click", function(){
            const url = "/api/userroom/" + {{userId}} + "/" + {{id}};
            fetch(url, {
                method: "GET",
                headers: {

                }
            }).then(response => response.json())
                    .then(data => {
                        alert("이미 참여되어있는 방입니다!");
                    }).catch(error => {
                const relation = {

                };
                const url = "/api/userroom/" + {{userId}} + "/" + {{id}};
                fetch(url, {
                    method: "post",
                    body: JSON.stringify(relation),
                    headers: {
                        "Content-Type": "application/json"
                    }
                }).then(response => {
                    const msg = (response.ok) ? "방에 참여하였습니다!" : "방 참여 실패!";
                    alert(msg);
                    window.location.reload();
                });
            })
        });
    }
</script>
<script>
    {
        const relationDeleteBtn = document.querySelector("#bye-button")
        relationDeleteBtn.addEventListener("click", function(){
            const url = "/api/userroom/" + {{userId}} + "/" + {{id}};
            fetch(url, {
                method: "DELETE",
                headers: {

                }
            }).then(response => response.json())
                    .then(data => {
                        if({{leader}} == {{userId}}){
                            const url = "/api/room/" + data.room_id;
                            fetch(url, {
                                method: "DELETE",
                                headers: {

                                }
                            }).then(response => {
                                window.location.href = "/main";
                            });
                        }
                        alert("방에서 탈퇴했습니다!");
                        window.location.reload();
                    }).catch(error => {
                        alert("참여하고 있지 않은 방입니다!");
            })
        });
    }
</script>
<script>
    {
        const addArticleBtn = document.querySelector("#add-article-button")
        addArticleBtn.addEventListener("click", function(){
            const url = "/api/userroom/" + {{userId}} + "/" +{{id}};
            fetch(url, {
                method: "GET",
                headers: {

                }
            }).then(response => response.json())
                    .then(data => {
                        const article = {
                            content: document.querySelector("#article-text").value
                        }
                        const url = "/api/articles/" + {{id}} + "/" + {{userId}};
                        fetch(url, {
                            method: "POST",
                            body: JSON.stringify(article),
                            headers: {
                                "Content-Type": "application/json"
                            }
                        }).then(response => {
                            const msg = (response.ok) ? "글이 등록되었습니다!" : "글 등록 실패!";
                            alert(msg);
                            window.location.reload();
                        });
                    })
                    .catch(error => {
                        alert("작성권한이 없습니다!");
                    });
        });
    }
    {
        function deleteArticle(id, userId){
            if(userId == {{userId}} || {{leader}} == {{userId}}) {
                const url = "/api/articles/" + id;
                fetch(url, {
                    method: "DELETE",
                    headers: {}
                }).then(response => {
                    const msg = (response.ok) ? "글이 삭제되었습니다!" : "글 삭제 실패!";
                    alert(msg);
                    window.location.reload();
                });
            }
            else{
                alert("삭제 권한이 없습니다!")
            }
        }
    }
</script>
<script>
    {
        function showInfo(scheduleId){
            console.log(scheduleId);
            const info = document.querySelector(`#show-info-${scheduleId}`).value;
            const url = "/api/userschedule/" + {{userId}} + "/" + scheduleId;
            fetch(url, {
                method: "GET",
                headers: {}
            }).then(response => response.json())
                    .then(data => {
                        confirm(info);
                    })
                    .catch(error => {
                        alert("권한이 없습니다!");
                    });
        }
    }
</script>
<script>
    {
        function goToSchedule(scheduleId) {
            if({{leader}} != {{userId}}){
                alert("권한이 없습니다!");
                return;
            }
            const url = "/schedule/" + scheduleId + "/" + {{id}};
            window.location.href = url;
        }
    }
</script>
<!-- Modal -->
<div class="modal fade" id="edit-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fs-5" id="exampleModalLabel">방 정보 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label class="form-label">제목</label>
                        <input class="form-control form-control-sm" id="edit-title">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">설명</label>
                        <textarea class="form-control form-control-sm" rows="3" id="edit-info"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">공개</label>
                        <input type="checkbox" id="edit-show" class="form-check-input">
                    </div>
                    <input type="hidden" id="edit-code" value="{{code}}">
                    <button type="button" class="btn btn-outline-primary btn-sm" id="update-btn">수정 완료</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    {
        const commentEditModal = document.querySelector("#edit-modal");
        commentEditModal.addEventListener('show.bs.modal', function(event){
            document.querySelector("#edit-title").value = {{title}};
            document.querySelector("#edit-info").value = {{info}};
            document.querySelector("#edit-show").checked = {{show}};
        });
    }

{
    const updateBtn = document.querySelector("#update-btn");
    updateBtn.addEventListener("click", function (){
        const compare1 = document.querySelector("#userId").value;
        const compare2 = document.querySelector("#leaderId").value;
        if(compare1 == compare2) {
            const room = {
                id: {{id}},
                leader: {{leader}},
                code: document.querySelector("#edit-code").value,
                info: document.querySelector("#edit-info").value,
                title: document.querySelector("#edit-title").value,
                show: document.querySelector("#edit-show").checked
            };

            const url = "/api/room/" + room.id;
            fetch(url, {
                method: "PATCH",
                body: JSON.stringify(room),
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(response => {
                const msg = (response.ok) ? "정보가 수정되었습니다!" : "수정 실패!";
                alert(msg);
                window.location.reload();
            });
        }
        else{
            alert("수정 권한이 없습니다!");
        }
    });
}
</script>

<div class="modal fade" id="schedule-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fs-5" id="exampleModalLabel">N빵 만들기</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="mb-3">
                        <label class="form-label">주기</label>
                        <input class="form-control form-control-sm" id="add-date">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">금액</label>
                        <input type="number" class="form-control form-control-sm" id="add-money">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">설명</label>
                        <textarea class="form-control form-control-sm" rows="3" id="add-info"></textarea>
                    </div>
                    <button type="button" class="btn btn-outline-primary btn-sm" id="add-btn">생성</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
    {
        const addBtn = document.querySelector("#add-btn");
        addBtn.addEventListener("click", function (){
            if({{leader}} != {{userId}}){
                alert("권한이 없습니다!");
                return;
            }
            const schedule = {
                date: document.querySelector("#add-date").value,
                money: document.querySelector("#add-money").value,
                info: document.querySelector("#add-info").value,
            };
            const url = "/api/schedule/" + {{id}};
            fetch(url, {
                method: "POST",
                body: JSON.stringify(schedule),
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(response => response.json())
                    .then(data => {
                        const relation = {
                        }
                        const url = "/api/userschedule/" + {{leader}} + "/" + data.id;
                        fetch(url, {
                            method: "POST",
                            body: JSON.stringify(relation),
                            headers: {
                                "Content-Type": "application/json"
                            }
                        }).then(response => {
                            const msg = (response.ok) ? "추가 되었습니다!" : "추가 실패!";
                            alert(msg);
                            window.location.reload();
                        });
                    });
        });
    }
</script>

{{/dto}}
{{>layouts/footer}}