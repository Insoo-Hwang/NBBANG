{{>layouts/header}}
{{#dto}}
<div class="card-container">
    <div id = "show"></div>
    <div id = "code" style="cursor: pointer">초대 코드 : {{code}}</div>
    <div class="card card-title">
        {{title}}
    </div>
    <div class="card card-content card-content-info">
        {{info}}
    </div>
    <button type="button" id="join-button">파티 참여하기</button>
    <button type="button" id="bye-button">파티 탈퇴하기</button>
    <div style="text-align: center">참여 인원</div>
    {{#userDtos}}
    <div class="card mb-3">
        <div class="card-content">
            {{nickname}}
        </div>
    </div>
    {{/userDtos}}
</div>
<script>
    function checkShow(show){
        const showDiv = document.getElementById("show");
        if(show){
            showDiv.innerHTML = "이 방은 공개 방입니다";
            showDiv.style.color = "#4286f5";
        }
        else{
            showDiv.innerHTML = "이 방은 비공개 방입니다";
            showDiv.style.color = "#FF6666";
        }
    }
    window.onload = checkShow({{show}});
</script>
<script>
    function copyCode() {
        const textarea = document.createElement("textarea");
        const codeValue = "{{code}}";
        textarea.value = String(codeValue);
        document.body.appendChild(textarea);
        textarea.select();
        document.execCommand("copy");
        document.body.removeChild(textarea);
        alert("초대 코드가 클립보드에 복사되었습니다!");
    }

    document.getElementById("code").addEventListener("click", function() {
        copyCode();
    });
</script>
<script>
    {
        const relationCheckBtn = document.querySelector("#join-button")
        relationCheckBtn.addEventListener("click", function(){
            const url = "/api/userroom/" + {{userId}} + "/" + {{id}};
            fetch(url, {
                method: "GET",
                headers: {

                }
            }).then(response => response.json())
                    .then(data => {
                        alert("이미 참여되어있는 방입니다!");
                    }).catch(error => {
                const relation = {

                };
                const url = "/api/userroom/" + {{userId}} + "/" + {{id}};
                fetch(url, {
                    method: "post",
                    body: JSON.stringify(relation),
                    headers: {
                        "Content-Type": "application/json"
                    }
                }).then(response => {
                    const msg = (response.ok) ? "방에 참여하였습니다!" : "방 참여 실패!";
                    alert(msg);
                    window.location.reload();
                });
            })
        });
    }
</script>
<script>
    {
        const relationDeleteBtn = document.querySelector("#bye-button")
        relationDeleteBtn.addEventListener("click", function(){
            const url = "/api/userroom/" + {{userId}} + "/" + {{id}};
            fetch(url, {
                method: "DELETE",
                headers: {

                }
            }).then(response => response.json())
                    .then(data => {
                        if({{leader}} == {{userId}}){
                            const url = "/api/room/" + data.room_id;
                            fetch(url, {
                                method: "DELETE",
                                headers: {

                                }
                            }).then(response => {
                                window.location.href = "/main";
                            });
                        }
                        alert("방에서 탈퇴했습니다!");
                        window.location.reload();
                    }).catch(error => {
                        alert("참여하고 있지 않은 방입니다!");
            })
        });
    }
</script>
{{/dto}}
{{>layouts/footer}}